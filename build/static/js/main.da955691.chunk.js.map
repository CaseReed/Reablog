{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Card/Card.js","redux/articles/articleReducer.js","Containers/Home/Home.js","Components/Form/Form.js","Containers/AddArticle/AddArticle.js","Containers/Contact/Contact.js","Containers/Article/Article.js","App.js","redux/store.js","index.js"],"names":["Navbar","useState","toggleMenu","setToggleMenu","window","innerWidth","screenWidth","setScreenWidth","useEffect","changeWidth","addEventListener","removeEventListener","className","to","onClick","Card","props","children","INITIAL_STATE","articles","articleReducer","state","action","type","newArr","unshift","payload","Home","useSelector","dispatch","useDispatch","length","fetch","then","response","json","data","map","item","title","pathname","replace","trim","body","uuidv4","Form","article","setArticle","handleInput","e","target","classList","contains","newObjState","value","console","log","onSubmit","preventDefault","htmlFor","onChange","id","placeholder","AddArticle","Contact","Article","location","useLocation","App","basename","process","path","element","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da955691.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Navbar.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n\r\n    const [toggleMenu, setToggleMenu] = useState(false);\r\n    // screenWidth = largueur actuelle de l'écran\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n    const toggleNav = () => {\r\n        setToggleMenu(!toggleMenu);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        // changeWidth change en temps réel la valeur screenWidth avec le setSreenWidth\r\n        const changeWidth = () => {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n\r\n        // ajoute un eventListener sur la windows pour savoir la taille de l'écran en temps réel\r\n        window.addEventListener('resize', changeWidth)\r\n\r\n        // methode de cleanup de la function\r\n        return () => {\r\n            window.removeEventListener('resize', changeWidth);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <nav>\r\n            {/* soit la variable toggleMenu est true OU la taille de l'écran et supérieur à 500px */}\r\n            {(toggleMenu || screenWidth > 500) && (\r\n                <ul className=\"liste\">\r\n                    <li className=\"items\">\r\n                        <Link to=\"/\">Accueil</Link>\r\n                    </li>\r\n                    <li className=\"items\">\r\n                    <Link to=\"/ecrire\">Ecrire</Link>\r\n                    </li>\r\n                    <li className=\"items\">\r\n                    <Link to=\"/contact\">Contact</Link>\r\n                    </li>\r\n                </ul>\r\n            )}\r\n            <button\r\n                onClick={toggleNav}\r\n                className=\"btn\">BTN</button>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\nimport './Card.css'\n\nexport default function Card(props) {\n    return (\n        <div className=\"card\">\n            {props.children}\n        </div>\n    )\n}\n","const INITIAL_STATE = {\n    articles: []\n}\n\nfunction articleReducer(state = INITIAL_STATE, action){\n    switch(action.type){\n        case \"ADDARTICLE\" :\n            const newArr = [...state.articles]; // New arr + copie de articles\n            newArr.unshift(action.payload); // Ajouter l'élement au début du tableau avec unshift\n            return {\n                ...state, // Récupérer tout ce qui existe déjà dans le INITIAL_STATE\n                articles: newArr\n            }\n        case \"LOADARTICLES\" : {\n            return {\n                ...state,\n                articles: action.payload\n            }\n        }\n    }\n    return state;\n}\n\nexport default articleReducer;\n\nexport const getArticles = () => dispatch => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then(response => response.json())\n    .then(data => {\n        dispatch({\n            type: \"LOADARTICLES\",\n            payload: data\n        })\n    })\n}","import React from 'react'\nimport './Home.css'\nimport Card from '../../Components/Card/Card'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { getArticles } from '../../redux/articles/articleReducer'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nexport default function Home() {\n\n    // Permet de faire une référence au tableau article présent dans le reducer\n    const { articles } = useSelector(state => ({\n        ...state.articleReducer\n    }));\n\n    const dispatch = useDispatch();\n\n    // Permet de call la méthode getArticles uniquement si le tableau et vide, évite de call la méthode pour rien\n    useEffect(() => {\n        if (articles.length === 0) {\n            dispatch(getArticles());\n        }\n    }, [])\n\n    return (\n        <>\n            <h1 className=\"home-title\">Tous les articles</h1>\n            <div className=\"container-cards\">\n                {articles.map(item => {\n                    return (\n                        <Card key={uuidv4()}>\n                            <h2>{item.title}</h2>\n\n                            <Link\n                                to={{ pathname: `articles/${item.title.replace(/\\s+/g, '-').trim()}` }}\n                                state={{ title: item.title, body: item.body }}>\n                                Lire l'article\n                            </Link>\n\n                        </Card>\n                    )\n                })}\n            </div>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport './Form.css'\n\nexport default function Form() {\n\n    // Déclaration du title et du body en state\n    const [article, setArticle] = useState({\n        title: \"\",\n        body: \"\"\n    })\n\n    // Déclaration du dispatch\n    const dispatch = useDispatch();\n\n    // Annulation du comportement par defaut du form submit pour éviter de rafraichir la page lors de l'envoie\n    const handleForm = e => {\n        e.preventDefault();\n\n        // Le dispatch envoie vers le reducer\n        dispatch({\n            type: 'ADDARTICLE',\n            payload: article // Les données envoyées\n        })\n\n        setArticle({\n            title: \"\",\n            body: \"\"\n        })\n    }\n\n    // Surveille les changements des inputs\n    const handleInput = e => {\n\n        // Si la target possède la classe inp-title\n        if (e.target.classList.contains('inp-title')) {\n            // Création d'une nouvelle const qui récupère la valeur du input\n            const newObjState = { ...article, title: e.target.value };\n            // Mise à jour du title de l'article\n            setArticle(newObjState);\n        } else if (e.target.classList.contains('inp-body')) {\n            const newObjState = { ...article, body: e.target.value };\n            // Mise à jour du body de l'article\n            setArticle(newObjState);\n        }\n\n    }\n\n    console.log(article);\n\n    return (\n        <>\n            <h1 className=\"title-form\">Écrivez un article</h1>\n\n            <form onSubmit={handleForm} className=\"container-form\">\n\n                <label htmlFor=\"title\">Titre</label>\n                <input\n                    onChange={handleInput}\n                    value={article.title} // Two way data binding\n                    type=\"text\"\n                    id=\"title\"\n                    placeholder=\"Entrez votre nom\"\n                    className=\"inp-title\" />\n\n                <label htmlFor=\"article\">Votre article</label>\n                <textarea\n                    onChange={handleInput}\n                    value={article.body} // Two way data binding\n                    id=\"article\"\n                    placeholder=\"Votre article\"\n                    className=\"inp-body\"></textarea>\n\n                <button>Envoyez l'article</button>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport Form from '../../Components/Form/Form'\n\nexport default function AddArticle() {\n    return (\n        <>\n            <Form />\n        </>\n    )\n}\n","import React from 'react'\nimport './Contact.css'\n\nexport default function Contact() {\n    return (\n        <div className=\"container-contact\">\n            <h1>Contactez-nous</h1>\n            <p>Par mail : blogreact@gmail.com</p>\n            <p>Par téléphone : 06 06 06 06 06</p>\n            <p>Rejoignez-nous sur les reseaux :</p>\n            <ul>\n                <li>Facebook</li>\n                <li>Twitter</li>\n                <li>Youtube</li>\n            </ul>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Article.css';\n\nexport default function Article() {\n\n    const location = useLocation();\n    console.log(location);\n\n    return (\n        <div className=\"article-content\">\n            <h2>Votre article : {location.state.title}</h2>\n            <p>{location.state.body}</p>\n        </div>\n    )\n}\n","import Navbar from './Components/Navbar/Navbar'\nimport Home from './Containers/Home/Home';\nimport { Routes, Route } from 'react-router-dom';\nimport AddArticle from './Containers/AddArticle/AddArticle';\nimport Contact from './Containers/Contact/Contact';\nimport Article from './Containers/Article/Article';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n        \n      <Routes basename={process.env.PUBLIC_URL}>\n        <Route path='/' element={<Home />}/>\n        <Route path='/ecrire' element={<AddArticle />}/>\n        <Route path='/contact' element={<Contact />}/>\n        <Route path='/articles/:slug' element={<Article />}/>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport articleReducer from './articles/articleReducer';\nimport thunk from \"redux-thunk\";\n\n// Déclaration du reducer principal, combineReducers permet d'en avoir plusieurs\nconst rootReducer = combineReducers({\n    articleReducer\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Provider permet d'hydrater toute l'app\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}